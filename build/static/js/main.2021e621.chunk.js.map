{"version":3,"sources":["service/persons.js","components/Header.js","components/Search.js","components/PersonForm.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","msg","put","Header","props","text","Search","handleFilterByName","value","onChange","PersonForm","onSubmit","submithandler","nameChangeHandler","newNameValue","numberChangeHandler","newNumberValue","type","Person","renderedPersons","deletePerson","map","person","key","name","number","onClick","Notification","message","messageClass","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filteredName","setFilteredName","setMessage","setMessageClass","useEffect","personService","allPersons","filter","toLowerCase","includes","event","target","preventDefault","personObject","find","window","confirm","personToUpdate","returnedPerson","catch","error","addedPerson","concat","setTimeout","newPersonsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2021e621.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => axios.get(baseUrl).then((response) => response.data);\n\nconst create = (newObject) =>\n   axios.post(baseUrl, newObject).then((response) => response.data);\n\nconst deletePerson = (id) =>\n   axios.delete(`${baseUrl}/${id}`).then((response) => {\n      return { msg: \"Person deleted\" };\n   });\n\nconst update = (id, newObject) =>\n   axios.put(`${baseUrl}/${id}`, newObject).then((response) => response.data);\n\nexport default { getAll, create, deletePerson, update };\n","import React from \"react\";\n\nconst Header = (props) => <h2>{props.text}</h2>;\n\nexport default Header;\n","import React from \"react\";\n\nconst Search = ({ handleFilterByName, value }) => (\n   <p>\n      Search by name:\n      <input onChange={handleFilterByName} value={value} />\n   </p>\n);\n\nexport default Search;\n","import React from \"react\";\n\nconst PersonForm = (props) => (\n   <form onSubmit={props.submithandler}>\n      <h2>Add a new number</h2>\n      <div>\n         name:{\" \"}\n         <input\n            id=\"name\"\n            onChange={props.nameChangeHandler}\n            value={props.newNameValue}\n         />\n      </div>\n      <div>\n         number:{\" \"}\n         <input\n            onChange={props.numberChangeHandler}\n            value={props.newNumberValue}\n         />\n      </div>\n      <div>\n         <button type=\"submit\">add</button>\n      </div>\n   </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ renderedPersons, deletePerson }) => (\n   <div>\n      {renderedPersons.map((person) => (\n         <p key={person.name}>\n            {person.name} {person.number}\n            <button onClick={() => deletePerson(person.id)}>delete</button>\n         </p>\n      ))}\n   </div>\n);\n\nexport default Person;\n","import React from \"react\";\n\nconst Notification = ({ message, messageClass }) => {\n   if (!message) return null;\n\n   return <div className={`message ${messageClass}`}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./service/persons\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport PersonForm from \"./components/PersonForm\";\nimport Person from \"./components/Person\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n   const [persons, setPersons] = useState([]);\n   const [newName, setNewName] = useState(\"\");\n   const [newNumber, setNewNumber] = useState(\"\");\n   const [filteredName, setFilteredName] = useState(\"\");\n   const [message, setMessage] = useState(null);\n   const [messageClass, setMessageClass] = useState(null);\n\n   useEffect(() => {\n      personService.getAll().then((allPersons) => setPersons(allPersons));\n   }, []);\n\n   const addPerson = (event, id) => {\n      event.preventDefault();\n\n      if (!newName || !newNumber) {\n         setMessage(\"Please add a name and number\");\n         setMessageClass(\"error\");\n         return;\n      }\n\n      let personObject;\n\n      if (persons.find((person) => person.name === newName)) {\n         const confirmUpdate = window.confirm(\n            `${newName} is already added to phone, replace the old number with a new one?`\n         );\n         if (confirmUpdate) {\n            const personToUpdate = persons.find(\n               (person) => person.name === newName\n            );\n            personObject = { ...personToUpdate, number: newNumber };\n\n            personService\n               .update(personObject.id, personObject)\n               .then((returnedPerson) => {\n                  setPersons(\n                     persons.map((person) =>\n                        person.id !== personObject.id ? person : returnedPerson\n                     )\n                  );\n                  setNewName(\"\");\n                  setNewNumber(\"\");\n                  setMessage(\n                     `Updated contact information for ${personObject.name}`\n                  );\n                  setMessageClass(\"success\");\n               })\n               .catch((error) => {\n                  setMessage(`Contact had already been deleted from server`);\n                  setMessageClass(\"error\");\n               });\n         }\n      } else {\n         personObject = { name: newName, number: newNumber };\n\n         personService.create(personObject).then((addedPerson) => {\n            setPersons(persons.concat(addedPerson));\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setMessage(`Added ${personObject.name} to phonebook`);\n            setMessageClass(\"success\");\n         });\n      }\n\n      setTimeout(() => {\n         setMessage(null);\n         setMessageClass(null);\n      }, 3000);\n   };\n\n   const deletePerson = (id) => {\n      const newPersonsList = persons.filter((person) => person.id !== id);\n\n      const confirmDeletion = window.confirm(\n         \"Are you sure you want to delete this contact?\"\n      );\n\n      if (confirmDeletion) {\n         personService\n            .deletePerson(id)\n            .then((response) => {\n               setPersons(newPersonsList);\n               setMessage(`Deleted contact from phonebook`);\n               setMessageClass(\"success\");\n            })\n            .catch((error) => {\n               setPersons(newPersonsList);\n               setMessage(`Contact had already been deleted`);\n               setMessageClass(\"error\");\n            });\n      } else {\n         return;\n      }\n\n      setTimeout(() => {\n         setMessage(null);\n         setMessageClass(null);\n      }, 3000);\n   };\n\n   const handleNewName = (event) => {\n      setNewName(event.target.value);\n   };\n\n   const handleNewNumber = (event) => {\n      setNewNumber(event.target.value);\n   };\n\n   const handleFilterByName = (event) => {\n      setFilteredName(event.target.value);\n   };\n\n   const renderedPersons = !filteredName\n      ? persons\n      : persons.filter((person) =>\n           person.name.toLowerCase().includes(filteredName.toLowerCase())\n        );\n\n   return (\n      <div>\n         <Header text=\"Phonebook\" />\n         <Notification message={message} messageClass={messageClass} />\n         <Search handleFilterByName={handleFilterByName} value={filteredName} />\n         <PersonForm\n            submithandler={addPerson}\n            nameChangeHandler={handleNewName}\n            newNameValue={newName}\n            numberChangeHandler={handleNewNumber}\n            newNumberValue={newNumber}\n         />\n         <Header text=\"Numbers\" />\n         <Person\n            renderedPersons={renderedPersons}\n            deletePerson={deletePerson}\n         />\n      </div>\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}